def pluginMinSdk = 19
def needAGC = true

try {
    // Use try-catch to check that project's runtime is Capacitor
    if (rootProject.ext.minSdkVersion < pluginMinSdk) {
        rootProject.ext.minSdkVersion = pluginMinSdk
    }
    if (needAGC) {
        rootProject.subprojects {
            if (name == "app") {
                if (!plugins.hasPlugin('com.huawei.agconnect')) {
                    rootProject.ext.postBuildExtras = {
                        apply plugin: 'com.huawei.agconnect'
                    }
                }
            }
        }
    }
} catch (e1) {
    // Project runtime is Cordova
    try {
        if (needAGC) {
            cdvPluginPostBuildExtras.add({
                afterEvaluate {
                    rootProject.subprojects {
                        if (name == "app") {
                            if (!plugins.hasPlugin('com.huawei.agconnect')) {
                                apply plugin: 'com.huawei.agconnect'
                            }
                        }
                    }
                }
            })
        }
    } catch (e2) {
        println("WARNING: Huawei AGConnect is not set")
    }

    // Cordova 9.X
    try {
        if (defaultMinSdkVersion < pluginMinSdk) {
            cdvMinSdkVersion = pluginMinSdk
        }
    } catch (e3) {
        // Cordova 10.X
        try {
            if (cordovaConfig.MIN_SDK_VERSION < pluginMinSdk) {
                cordovaConfig.MIN_SDK_VERSION = pluginMinSdk
            }
        } catch (e4) {
            println("WARNING: Huawei Min SDK is not set")
        }
    }
}
